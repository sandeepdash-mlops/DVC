1. Create git repo and clone it in local.
# pip install pandas
2. Create mycode.py and add code to it. (it will save a csv file to a new "data" folder)
3. Do a git add-commit-push before initializing dvc.
# pip install dvc
4. Now we do "dvc init" (creates .dvcignore, .dvc)
5. Now do "mkdir S3" (creates a new S3 directory)
6. Now we do "dvc remote add -d myremote S3"
7. Next "dvc add data/" 
   Everytime you'll be resonsible for versioning and tracking files inside which is present inside data dir with data.dvc and .gitignore, once this got commit with dvc.
   dont monitor data/ dir directly from git.
   Now it will ask to do: ("git rm -r --cached 'data'" and "git commit -m "stop tracking data"")
   Because initially we were tracking data/ folder from git so now we remove it for DVC to handle.
8. Again we do "dvc add data/" (creates data.dvc) then "git add .gitignore data.dvc"
9. Now - "dvc commit" and then "dvc push"
9. Do a git add-commit-push to mark this stage as first version of data.
10. Now make changes to mycode.py to append a new row in data, check changes via "dvc status"
11. Again - - "dvc commit" and then "dvc push"
12. Then git add-commit-push (we're saving V2 of our data at this point)
13. Check dvc/git status, everything should be upto date.
14. Now repeat step 10-12 for v3 of data.

   View commit history in short format
git log --oneline

   Checkout a specific commit by its hash (e.g., to roll back to a previous version)
git checkout <commit-hash>

   Now you're on the code state of that specific commit
   Run this to pull the corresponding data tracked by DVC
dvc pull

   To go back to the latest commit on the main branch
git checkout main

   Pull the data for the latest version of the code
dvc pull


  

Note:
DVC is not limited to versioning .csv or .xlsx files â€” it can track any kind of data artifact, including .json files, model binaries, images, or even serialized Python objects (like dictionaries saved as .pkl, .json, or .npy).
As long as you tell DVC to track a file using dvc add, dvc run, or dvc.yaml, it will manage versioning and storage automatically.
